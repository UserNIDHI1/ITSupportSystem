@model ITSupportSystem.Core1.ViewModel.CommonLookUpViewModel

<div class="modal fade" id="addmodal">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">

                <h2 class="modal-title" id="CommonLookUpModalLabel" style="text-align:center;">CREATE</h2>

                <div class="modal-body">

                    <form id="commonLookUpForm" name="CreateForm">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfigName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ConfigName, new { htmlAttributes = new { @class = "form-control", @id = "configname" ,onkeyup= "createvalidate()" } })
                                <span id="confignameerror" style="color:darkred"></span>
                                @*@Html.ValidationMessageFor(model => model.ConfigName, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <br /><br /><br />

                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfigKey, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ConfigKey, new { htmlAttributes = new { @class = "form-control",@id="configkey" ,onkeyup = "createvalidate()" } })
                                @*@Html.ValidationMessageFor(model => model.ConfigKey, "", new { @class = "text-danger" })*@
                                <span id="configkeyerror" style="color:darkred"></span>
                            </div>
                        </div>
                        <br /><br />
                        <div class="form-group">
                            @Html.LabelFor(model => model.ConfigValue, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ConfigValue, new { htmlAttributes = new { @class = "form-control" ,@id="configvalue", onkeyup = "createvalidate()" } })
                                <span id="configvalueerror" style="color:darkred"></span>
                                @*@Html.ValidationMessageFor(model => model.ConfigValue, "", new { @class = "text-danger" })*@
                            </div>
                        </div>
                        <br /><br />
                        <div class="form-group">
                            @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br /><br />
                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <br /><br />
                    </form>
                    <div class="modal-footer" style="text-align:center">
                        <button type="button" id="saveButton" class="btn btn-primary" onclick="createpost()" >Save</button>
                        <button type="button" class="btn btn-danger" data-dismiss="modal">Close</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@Styles.Render("~/Content/demo.css")
<script>
    function createpost() {
        var modal = $('#addmodal');
        var form = $('form[name="CreateForm"]');
        var configname = $('#configname').val();
        var configkey = $('#configkey').val();
        var configvalue = $('#configvalue').val();
        var model = form.serialize();

        if (configname != '' && configkey != '' && configvalue != '') {
            $.post("/CommonLookUp/Create", model, function (res) {
                if (res) {
                    location.reload();
                }
            })
        }
        else {
            createvalidate();
        }
    }
        function createvalidate() {
            var configname = $('#configname').val();
            var configkey = $('#configkey').val();
            var configvalue = $('#configvalue').val();
            if (configname == '') {
                $('#confignameerror').text("Config Name is required");
            }
            else {
                $('#confignameerror').text("");
            }
            if (configkey == '') {
                $('#configkeyerror').text("Config Key is required");
            }
            else {
                $('#configkeyerror').text("");
            }
            if (configvalue == '') {
                $('#configvalueerror').text("Config Value is required");
            }
            else {
                $('#configvalueerror').text("");
            }
        }  
</script>

