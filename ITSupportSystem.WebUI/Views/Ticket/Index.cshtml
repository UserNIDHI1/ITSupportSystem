@using Kendo.Mvc.UI
@using ITSupportSystem.Core1.ViewModel
@using ITSupportSystem.Services


@{
    ViewBag.Title = "Index";
}

<div class="section">
    <div class="container">
        <div class="topTitleHead pb20">

        </div>
    </div>
</div>

<div class="tabContentDetails">
    <div class="tabcontent" style="display: block">
        <div class="align-center align-between pb20">
            <h2><b>Ticket Management</b></h2>

            <div class="btnDiv">
                <a href="#"> @Html.ActionLink("+ Add New", "Create", "Ticket")</a>
            </div>
        </div>
    </div>


    <div class="modal fade" tabindex="-1" role="dialog" id="AttachmentModal">
        <div class="modal-dialog modal-dialog-centered" role="document">

            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                    <h1 style="color:chocolate;text-align:center;font-family:Algerian;">Attachment List</h1>
                </div>
                <div class="modal-body">
                    <div id="AttachmentModalContent" style="margin-left:50px">
                    </div>
                </div>
                <div class="modal-footer">
                </div>
            </div>
        </div>
    </div>


    @(Html.Kendo().Grid<TicketViewModel>().Name("Ticketgrid")

        .ToolBar(t=>t.Search())
        .Editable(editable => editable.Mode(GridEditMode.InLine))

         .Pageable(pageable =>
         {
             pageable.Refresh(true);
         })

        .NoRecords("No Records Found.")
        .Search(s=>
        {
            s.Field(c => c.Title);
            s.Field(c => c.Assigned);
            s.Field(c => c.Type);
            s.Field(c => c.Priority);
            s.Field(c => c.Status);
        })

        .Columns(columns =>
        {
            columns.Bound(c => c.Title);
            columns.Bound(c => c.Assigned);
            columns.Bound(c => c.Type);
            columns.Bound(c => c.Priority);
            columns.Bound(c => c.Status);
            columns.Bound(c => c.TicketAttachment).Hidden().ClientTemplate("<input type = 'hidden' id = 'hdn_#=Id#' value = '#=TicketAttachment#' /> ");
            columns.Bound(c => c.Attachment).ClientTemplate("#if (AttachmentCount != 0)" + "{#" + "<a onclick='CheckValue(this)' id='#=Id#'>#=AttachmentCount#</a>#}# ");

            columns.Template(c => { }).Title(string.Empty)
              .ClientTemplate("<a href='" + Url.Action("Edit", "Ticket") + "/#=Id#' class='btn btn-success'>Edit</a>").Width(75);

            columns.Command(c => c.Destroy()).Width(120);

        })
        .HtmlAttributes(new { style = "height:370px;" })
        .Sortable()
        .Scrollable()
        .Filterable()
        .DataSource(dataSource => dataSource.Ajax().Model(model => model.Id(p => p.Id)).Read(read => read.Action("GetAllTicketJson", "Ticket"))
        .Update(update => update.Action("Edit", "Ticket"))
        .Destroy(destroy => destroy.Action("Delete", "Ticket"))
        .Create(create => create.Action("Create", "Ticket"))
        .PageSize(5))
    )
</div>

<script>
    function CheckValue(e) {
        var grid = $("#Ticketgrid").data("kendoGrid");
        var row = $(e).closest("tr");  //returns null if no match is found.
        var item = grid.dataItem(row); //row wise data
        var list = item.TicketAttachment; //attach data
        if (list != null && list.length > 0) {
            var htmlData = '';
            for (let i = 0; i < list.length; i++) {
                htmlData += "<a class='ticket' href='/Content/TicketAttachment/" + list[0].FileName + "' download>" + list[0].FileName + "</a><br/>"
            }
        }
        $("#AttachmentModalContent").html(htmlData);
        $("#AttachmentModal").modal('show')
    }
</script>

