@model ITSupportSystem.Core1.ViewModel.FormViewModel

@using (Html.BeginForm("Create", "Form", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <!DOCTYPE html>
    <html lang="en-us">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>CRB Form</title>

        <link rel="stylesheet" href="css/style.css">

    </head>
    <body>
        <div class="mainDiv">
            <div class="formDiv">
                <div class="topTitleHead pb20">
                    <h3 style="text-align:left;color:green;font-family:sans-serif"><b>CREATE</b></h3>
                </div>

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="text-danger" style="font-size: 15px">
                    @ViewBag.Message
                </div>

                <div class="formSection">
                    <div class="inputBox">
                        <label class="form-label"><b>Name</b><strong style="color:red;font-size:18px;">*</strong></label>
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "errorMsg" })
                    </div>

                    <div class="inputBox">
                        <label class="form-label"><b>NavigateURL</b></label>
                        @Html.EditorFor(model => model.NavigateURL, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NavigateURL, "", new { @class = "errorMsg" })
                    </div>

                    <div class="inputBox selectBox">
                        <label class="form-label"><b>ParentFormId</b></label>
                        @Html.ValidationMessageFor(model => model.ParentFormId, "", new { @class = "errorMsg" })
                        @Html.DropDownListFor(model => model.ParentFormId, new SelectList(Model.FormDropDown, "ParentFormId", "ParentFormName"), "Select ParentFormId", new { @class = "form-control" })
                    </div>

                    <div class="inputBox">
                        <label class="form-label"><b>FormAccessCode</b><strong style="color:red;font-size:18px;">*</strong></label>
                        @Html.EditorFor(model => model.FormAccessCode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FormAccessCode, "", new { @class = "errorMsg" })
                    </div>

                    <div class="inputBox">
                        <label class="form-label"><b>DisplayIndex</b></label>
                        @Html.EditorFor(model => model.DisplayIndex, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DisplayIndex, "", new { @class = "errorMsg" })
                    </div>
                </div>
                <div>
                    <div class="inputBox">
                        <button type="submit" class="btnDiv" id="SubmitBtnId" style="color:black">CREATE</button>
                    </div>
                    @Html.HiddenFor(model => model.Id)
                </div>
            </div>
        </div>
    </body>
</html>
}
<div>@Html.ActionLink("back to list", "Index", "Form")</div>


<script>
      $('#SubmitBtnId').click(function () {
        toastr.success('Data Saved Successfully...');
             document.location = '@Url.Action("Index","Form")';
     });
</script>





















